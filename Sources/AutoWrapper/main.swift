//
//  main.swift
//
//
//  Created by Christian Treffs on 24.10.19.
//

import struct Foundation.URL
import struct Foundation.Data

struct ConversionError: Swift.Error {
    let localizedDescription: String
}

public func getDirectory(ofFile filePath: String = #file) -> String {
    guard let lastSlashIdx = filePath.lastIndex(of: "/") else {
        return filePath
    }
    var dirPath = filePath
    dirPath.removeSubrange(lastSlashIdx..<filePath.endIndex)
    return dirPath
}

// Input: <SRC_ROOT>/3rdparty/cimgui/generator/output/definitions.json
let inputFile: String
// Output <SRC_ROOT>/Sources/ImGui/ImGui+Definitions.swift
let outputFile: String

if CommandLine.arguments.count == 3 {
    inputFile = CommandLine.arguments[1]
    outputFile = CommandLine.arguments[2]
} else {
    inputFile = getDirectory() + "/../../3rdparty/cimgui/generator/output/definitions.json"
    outputFile = getDirectory() + "/../ImGui/ImGui+Definitions.swift"
}

let header = """
// -- THIS FILE IS AUTOGENERATED - DO NOT EDIT!!! ---

import CImGui

// swiftlint:disable identifier_name

// Undeclared type definitions
\(Exceptions.undeclardTypes.values
.map { "public typealias \($0.name) = \($0.typealiasType)" }
.sorted()
.joined(separator: "\n"))

"""

let footer = """
"""

try convert(filePath: inputFile, validOnly: true) { body in
    let out: String = [header, body, footer].joined(separator: "\n\n")

    guard let data: Data = out.data(using: .utf8) else {
        throw ConversionError(localizedDescription: "Could not generate data from output string \(out)")
    }

    let outURL = URL(fileURLWithPath: outputFile)

    try data.write(to: outURL)
}
